unit Frame_Password_U;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, ExtCtrls;

type
  TFrame_Password = class(TFrame)
    RadioButton1: TRadioButton;
    Edit_Entere_pseudonyme: TEdit;
    Label_Entere_Nam: TLabel;
    Edit_Mot_Passe: TEdit;
    Label_MotPasse: TLabel;
    RadioButton2: TRadioButton;
    RadioButton3: TRadioButton;
    Button1: TButton;
    Label1: TLabel;
    Bevel1: TBevel;
    Image4: TImage;
    Image5: TImage;
    Image6: TImage;
    Image7: TImage;
    Image8: TImage;
    ImageEntere_pseudonyme: TImage;
    ImagePassword: TImage;
    Image2: TImage;
    Image1: TImage;
    Image3: TImage;
    procedure RadioButton1Click(Sender: TObject);
    procedure RadioButton2Click(Sender: TObject);
    procedure RadioButton3Click(Sender: TObject);
    procedure Edit_Entere_pseudonymeKeyPress(Sender: TObject;
      var Key: Char);
    procedure Edit_Mot_PasseKeyPress(Sender: TObject; var Key: Char);
    procedure Edit_Entere_pseudonymeExit(Sender: TObject);
    procedure Edit_Mot_PasseExit(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
    ValidityPassword, ValidityPseudonyme: Boolean; // ’Õ… ﬂ·„… «·„—Ê— Ê «”„ «·œŒÊ·
    procedure Next; // «· Õﬁﬁ „‰ ’Õ… „⁄·Ê„«  «·„ﬂ Ê»… ﬁ»· «·„—Ê— ≈·Ï «·’›Õ… «·„Ê«·Ì…

  end;

implementation

uses Form_Welcoming_U, Char_U, Type_U, Classes_U, Data_Module_U,
  Frame_Limitation_Time_U;

{$R *.dfm}

procedure TFrame_Password.Next;
resourcestring
  MsgText1 = 'ﬂ·„… «·„—Ê— ·« ﬁ· ⁄‰  6 Õ—Ê›';
  MsgText2 = '≈”„ «·„” Œœ„ ·« Ìﬁ· ⁄‰ 4 Õ—Ê›';
  MsgText3 = '«”„ «·„” Œœ„ €Ì— ’ÕÌÕ';
  MsgText4 = '⁄›Ê« ﬂ·„… «·„—Ê— €Ì— ’ÕÌÕ… ..';
begin
  if RadioButton1.Checked then
  begin
    if (Length(Edit_Entere_pseudonyme.Text) >= 4) then
    begin
      if ValidityPassword then
      begin
        if Length(Edit_Mot_Passe.Text) >= 6 then
        begin
          if ValidityPassword then
          begin
            Form_Welcoming.Notebook1.ActivePage := 'Page_Limitation_Time';
            TUser.Create_Use_User(UnitObjets_Active,Edit_Entere_pseudonyme.Text);
            Form_Welcoming.Frame_Limitation_Time.Undo:=UnitObjets_Active.Use.Cost;
            Label1.Visible := False;
            Button1.Visible := False;
          end
          else
          begin
            MessageBox(Application.Handle, PChar(MsgText4), PChar(MsgCaptionError), MB_OK + MsgType);
            Label1.Visible := True;
            Button1.Visible := True;
          end;
        end
        else
        begin
          MessageBox(Application.Handle, PChar(MsgText1), PChar(MsgCaptionError), MB_OK + MsgType);
          Label1.Visible := True;
          Button1.Visible := True;
        end;
      end
      else
      begin
        MessageBox(Application.Handle, PChar(MsgText4), PChar(MsgCaptionError), MB_OK + MsgType);
        Label1.Visible := True;
        Button1.Visible := True;
      end;
    end
    else
    begin
      MessageBox(Application.Handle, PChar(MsgText2), PChar(MsgCaptionError), MB_OK + MsgType);
    end;
  end
  else
    if RadioButton2.Checked then
    begin
      Form_Welcoming.Notebook1.ActivePage := 'Page_Recording1';
    end
    else
      if RadioButton3.Checked then
      begin
        Form_Welcoming.Notebook1.ActivePage := 'Page_Limitation_Time';
        Label1.Visible := True;
        Button1.Visible := True;
        TUser.Create_Use_User(UnitObjets_Active,'undefined');
      end;
end;

procedure TFrame_Password.RadioButton1Click(Sender: TObject);
begin
  Edit_Mot_Passe.Enabled := True;
  Edit_Entere_pseudonyme.Enabled := True;
  Edit_Mot_Passe.Color := clWindow;
  Edit_Entere_pseudonyme.Color := clWindow;
  Label_MotPasse.Font.Color := clWindowText;
  Label_Entere_Nam.Font.Color := clWindowText;
  Label1.Font.Color := clWindowText;
  Button1.Enabled := True;
end;

procedure TFrame_Password.RadioButton2Click(Sender: TObject);
begin
  Edit_Mot_Passe.Enabled := False;
  Edit_Entere_pseudonyme.Enabled := False;
  Edit_Mot_Passe.Color := clBtnFace;
  Edit_Entere_pseudonyme.Color := clBtnFace;
  Label_MotPasse.Font.Color := $0099A8AC;
  Label_Entere_Nam.Font.Color := $0099A8AC;
  Label1.Font.Color := $0099A8AC;
  Button1.Enabled := False;
end;

procedure TFrame_Password.RadioButton3Click(Sender: TObject);
resourcestring
  MsgText3 = '≈‰ ·„  ”Ã· «·œŒÊ· »≈”„ﬂ ›” ›ﬁœ ≈„ Ì«“«  ⁄œÌœ…';
begin
  if MessageBox(Application.Handle, PChar(MsgText3), PChar(MsgCaptionWarning), MB_OKCANCEL + MB_ICONWARNING + MB_DEFBUTTON2 + MB_SYSTEMMODAL + MB_RIGHT + MB_RTLREADING) = mrOK then
  begin
    Edit_Mot_Passe.Enabled := False;
    Edit_Entere_pseudonyme.Enabled := False;
    Edit_Mot_Passe.Color := clBtnFace;
    Edit_Entere_pseudonyme.Color := clBtnFace;
    Label_MotPasse.Font.Color := $0099A8AC;
    Label_Entere_Nam.Font.Color := $0099A8AC;
    Label1.Font.Color := $0099A8AC;
    Button1.Enabled := False;
  end
  else
  begin
    Form_Welcoming.ActiveControl := RadioButton1;
    RadioButton1.Checked := true;
  end;
end;

procedure TFrame_Password.Edit_Entere_pseudonymeKeyPress(Sender: TObject;
  var Key: Char);
begin
  if (Length(TEdit(Sender).Text) = 0) and (CharNumber(Key)) then key := #0;
  if CharTalisman(Key) or CharMath(Key) or CharSignText(Key) or (Key in [' ']) then
  begin
    key := #0;
    Form_Welcoming.Label_Message.Left := TWinControl(Sender).Left + Form_Welcoming.Notebook1.Left + 8;
    Form_Welcoming.Label_Message.Top := TWinControl(Sender).Top + 8 + 22;
    Form_Welcoming.Label_Message.Visible := True;
  end
  else Form_Welcoming.Label_Message.Visible := False;
end;

procedure TFrame_Password.Edit_Mot_PasseKeyPress(Sender: TObject;
  var Key: Char);
begin
  if CharArabic(Key) or CharFrenshe(Key) or CharTalisman(Key) or CharSignText(Key) or CharMath(Key) then
  begin
    key := #0;
    Form_Welcoming.Label_Message.Left := TWinControl(Sender).Left + Form_Welcoming.Notebook1.Left + 8;
    Form_Welcoming.Label_Message.Top := TWinControl(Sender).Top + 8 + 22;
    Form_Welcoming.Label_Message.Visible := True;
  end
  else Form_Welcoming.Label_Message.Visible := False;
end;

procedure TFrame_Password.Edit_Entere_pseudonymeExit(Sender: TObject);
begin
  if Edit_Entere_pseudonyme.Text <> '' then
  begin
    if (Length(Edit_Entere_pseudonyme.Text) >= 4) and (TUser.UsernameExists(Edit_Entere_pseudonyme.Text, UnitObjets_Active.Connexion)) then
    begin
      ValidityPseudonyme := True;
      ImageEntere_pseudonyme.Picture := Form_Welcoming.ImageTrue.Picture;
    end
    else
    begin
      ValidityPseudonyme := False;
      ImageEntere_pseudonyme.Picture := Form_Welcoming.ImageFalse.Picture;
    end;
    ImageEntere_pseudonyme.Visible := True;
  end
  else ImageEntere_pseudonyme.Visible := False;
end;

procedure TFrame_Password.Edit_Mot_PasseExit(Sender: TObject);
begin
  if Edit_Mot_Passe.Text <> '' then
  begin
    if (Length(Edit_Mot_Passe.Text) >= 6) and (TUser.checkPassword(Edit_Entere_pseudonyme.Text, Edit_Mot_Passe.Text, UnitObjets_Active.Connexion)) then
    begin
      ValidityPassword := True;
      ImagePassword.Picture := Form_Welcoming.ImageTrue.Picture;
    end
    else
    begin
      ValidityPassword := False;
      ImagePassword.Picture := Form_Welcoming.ImageFalse.Picture;
    end;
    ImagePassword.Visible := True;
  end
  else ImagePassword.Visible := False;
end;

end.

